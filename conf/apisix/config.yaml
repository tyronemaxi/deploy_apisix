#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apisix:
  # node_listen: 9080               # APISIX listening port
  node_listen:                      # This style support multiple ports
    - 9080
  #   - port: 9081
  #     enable_http2: true          # If not set, the default value is `false`.
  #   - ip: 127.0.0.2               # Specific IP, If not set, the default value is `0.0.0.0`.
  #     port: 9082
  #     enable_http2: true
  enable_admin: true
  enable_dev_mode: false            # Sets nginx worker_processes to 1 if set to true
  enable_reuseport: true            # Enable nginx SO_REUSEPORT switch if set to true.
  show_upstream_status_in_response_header: false # when true all upstream status write to `X-APISIX-Upstream-Status` otherwise only 5xx code
  enable_ipv6: true

  #proxy_protocol:                  # Proxy Protocol configuration
  #listen_http_port: 9181           # The port with proxy protocol for http, it differs from node_listen and admin_listen.
                                    # This port can only receive http request with proxy protocol, but node_listen & admin_listen
                                    # can only receive http request. If you enable proxy protocol, you must use this port to
                                    # receive http request with proxy protocol
  #listen_https_port: 9182          # The port with proxy protocol for https
  #enable_tcp_pp: true              # Enable the proxy protocol for tcp proxy, it works for stream_proxy.tcp option
  #enable_tcp_pp_to_upstream: true  # Enables the proxy protocol to the upstream server
  enable_server_tokens: true        # Whether the APISIX version number should be shown in Server header.
                                    # It's enabled by default.

  # configurations to load third party code and/or override the builtin one.
  extra_lua_path: ""                # extend lua_package_path to load third party code
  extra_lua_cpath: ""               # extend lua_package_cpath to load third party code
  #lua_module_hook: "my_project.my_hook"  # the hook module which will be used to inject third party code into APISIX

#  proxy_cache:                      # Proxy Caching configuration
#    cache_ttl: 10s                  # The default caching time in disk if the upstream does not specify the cache time
#    zones:                          # The parameters of a cache
#      - name: disk_cache_one        # The name of the cache, administrator can specify
#                                    # which cache to use by name in the admin api (disk|memory)
#        memory_size: 50m            # The size of shared memory, it's used to store the cache index for
#                                    # disk strategy, store cache content for memory strategy (disk|memory)
#        disk_size: 1G               # The size of disk, it's used to store the cache data (disk)
#        disk_path: /tmp/disk_cache_one  # The path to store the cache data (disk)
#        cache_levels: "1:2"           # The hierarchy levels of a cache (disk)
#      #- name: disk_cache_two
#      #  memory_size: 50m
#      #  disk_size: 1G
#      #  disk_path: "/tmp/disk_cache_two"
#      #  cache_levels: "1:2"
#      - name: memory_cache
#        memory_size: 50m
#
#  delete_uri_tail_slash: false    # delete the '/' at the end of the URI
#  # The URI normalization in servlet is a little different from the RFC's.
#  # See https://github.com/jakartaee/servlet/blob/master/spec/src/main/asciidoc/servlet-spec-body.adoc#352-uri-path-canonicalization,
#  # which is used under Tomcat.
#  # Turn this option on if you want to be compatible with servlet when matching URI path.
#  normalize_uri_like_servlet: false
#  router:
#    http: radixtree_uri         # radixtree_uri: match route by uri(base on radixtree)
#                                  # radixtree_host_uri: match route by host + uri(base on radixtree)
#                                  # radixtree_uri_with_parameter: like radixtree_uri but match uri with parameters,
#                                  #   see https://github.com/api7/lua-resty-radixtree/#parameters-in-path for
#                                  #   more details.
#    ssl: radixtree_sni          # radixtree_sni: match route by SNI(base on radixtree)
#  #stream_proxy:                  # TCP/UDP proxy
#  #  only: true                   # use stream proxy only, don't enable HTTP stuff
#  #  tcp:                         # TCP proxy port list
#  #    - addr: 9100
#  #      tls: true
#  #    - addr: "127.0.0.1:9101"
#  #  udp:                         # UDP proxy port list
#  #    - 9200
#  #    - "127.0.0.1:9201"
#  #dns_resolver:                  # If not set, read from `/etc/resolv.conf`
#  #  - 1.1.1.1
#  #  - 8.8.8.8
#  #dns_resolver_valid: 30         # if given, override the TTL of the valid records. The unit is second.
#  resolver_timeout: 5             # resolver timeout
#  enable_resolv_search_opt: true  # enable search option in resolv.conf
#  ssl:
#    enable: true
#    listen:                       # APISIX listening port in https.
#      - port: 9443
#        enable_http2: true
#    #   - ip: 127.0.0.3           # Specific IP, If not set, the default value is `0.0.0.0`.
#    #     port: 9445
#    #     enable_http2: true
#    #ssl_trusted_certificate: /path/to/ca-cert  # Specifies a file path with trusted CA certificates in the PEM format
#                                                # used to verify the certificate when APISIX needs to do SSL/TLS handshaking
#                                                # with external services (e.g. etcd)
#    ssl_protocols: TLSv1.2 TLSv1.3
#    ssl_ciphers: ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
#    ssl_session_tickets: false              #  disable ssl_session_tickets by default for 'ssl_session_tickets' would make Perfect Forward Secrecy useless.
#                                            #  ref: https://github.com/mozilla/server-side-tls/issues/135
#
#    key_encrypt_salt:             #  If not set, will save origin ssl key into etcd.
#      - edd1c9f0985e76a2          #  If set this, the key_encrypt_salt should be an array whose elements are string, and the size is also 16, and it will encrypt ssl key with AES-128-CBC
#                                  #  !!! So do not change it after saving your ssl, it can't decrypt the ssl keys have be saved if you change !!
#                                  #  Only use the first key to encrypt, and decrypt in the order of the array.
#
#    #fallback_sni: "my.default.domain"      # If set this, when the client doesn't send SNI during handshake, the fallback SNI will be used instead
#  enable_control: true
#  #control:
#  #  ip: 127.0.0.1
#  #  port: 9090
#  disable_sync_configuration_during_start: false  # safe exit. Remove this once the feature is stable

deployment:
  admin:
    allow_admin:               # https://nginx.org/en/docs/http/ngx_http_access_module.html#allow
      - 0.0.0.0/0              # We need to restrict ip access rules for security. 0.0.0.0/0 is for test.

    admin_key:
      - name: "admin"
        key: edd1c9f034335f136f87ad84b625c8f1
        role: admin                 # admin: manage all configuration data

      - name: "viewer"
        key: 4054f7cf07e344346cd3f287985e76a2
        role: viewer

  etcd:
    host:                           # it's possible to define multiple etcd hosts addresses of the same etcd cluster.
      - "http://etcd:2379"     # multiple etcd address, if your etcd cluster enables TLS, please use https scheme,
                                    # e.g. https://127.0.0.1:2379.
    prefix: /apisix                 # configuration prefix in etcd
    timeout: 30                     # 30 seconds
    #resync_delay: 5                # when sync failed and a rest is needed, resync after the configured seconds plus 50% random jitter
    #health_check_timeout: 10       # etcd retry the unhealthy nodes after the configured seconds
    startup_retry: 2                # the number of retry to etcd during the startup, default to 2
#    user: root                     # root username for etcd
#    password: datagrand            # root password for etcd
    tls:
      # To enable etcd client certificate you need to build APISIX-Base, see
      # https://apisix.apache.org/docs/apisix/FAQ#how-do-i-build-the-apisix-base-environment
      #cert: /path/to/cert          # path of certificate used by the etcd client
      #key: /path/to/key            # path of key used by the etcd client

      verify: true                  # whether to verify the etcd endpoint certificate when setup a TLS connection to etcd,
                                    # the default value is true, e.g. the certificate will be verified strictly.
      #sni:                         # the SNI for etcd TLS requests. If missed, the host part of the URL will be used.

plugin_attr:
  prometheus:
    export_addr:
      ip: "0.0.0.0"
      port: 9091